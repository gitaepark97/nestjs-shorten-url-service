version: "3.4"

services:
  db:
    image: mongo
    container_name: db
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root_password
      - MONGO_INITDB_DATABASE=dev_database
    volumes:
      - ./db/initdb.d:/docker-entrypoint-initdb.d:ro
      - db_data:/data/db

  mq:
    image: redis
    container_name: mq
    volumes:
      - mq_data:/data
      - ./mq/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  cache:
    image: redis
    container_name: cache
    volumes:
      - ./cache/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  was:
    container_name: was
    build:
      context: ./was
      dockerfile: Dockerfile.development
    ports:
      - 8000:8000
    volumes:
      - ./was:/app
      - /app/node_modules
    depends_on:
      - db
      - mq
      - cache

  loki:
    image: grafana/loki
    container_name: loki
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/config.yml
    command: -config.file=/etc/loki/config.yml

  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - ./was/logs:/logs
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus-config.yml:/etc/prometheus/config.yml
      - prometheus_data:/prometheus/data
    command:
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/config.yml"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  db_data:
  mq_data:
  prometheus_data:
  grafana_data:
